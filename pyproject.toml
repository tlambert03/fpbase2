[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fpbase2"
version = "0.1.0"
description = ""
authors = ["Talley Lambert <talley.lambert@gmail.com>"]

[tool.poetry.dependencies]
python = "~3.10"
fastapi = "~0.79"
requests = "^2.28.1"
sqlalchemy = "1.4.35"
sqlmodel = "~0.0.6"
strawberry-graphql = "^0.125.1"
uvicorn = { version = "^0.18.2", extras = ["standard"] }

[tool.poetry.dev-dependencies]
pytest = "^7.1"
pytest-cov = "^3.0.0"
flake8 = "^5.0.4"
mypy = "^0.971"
isort = "^5.10.1"
black = "^22.6.0"
pdbpp = "^0.10.3"
flake8-pyprojecttoml = { git = "https://github.com/tlambert03/flake8-pyprojecttoml.git", rev = "main" }
ipython = "^8.4.0"
pre-commit = "^2.20.0"
pydantic-factories = "^1.5.4"

[tool.poetry.scripts]
serve = "fpbase2._dev:serve"

# https://flake8.pycqa.org/en/latest/user/options.html
# https://gitlab.com/durko/flake8-pyprojecttoml
[tool.flake8]
exclude = "docs,.eggs,examples,_version.py"
max-line-length = 88
ignore = "E203"
min-python-version = "3.8.0"
docstring-convention = "all" # use numpy convention, while allowing D417
extend-ignore = """
E203  # whitespace before ':'
D107,D203,D212,D213,D402,D413,D415,D416  # numpy
D100  # missing docstring in public module
D401  # imperative mood
W503  # line break before binary operator
B008  # function calls in argument defaults
"""
per-file-ignores = ["tests/*:D"]

[tool.isort]
profile = 'black'

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "fpbase2/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "uvicorn",
]
ignore_missing_imports = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
]

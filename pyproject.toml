[project]
name = "fpbase2"
version = "0.1.0"
description = "FPbase API client 2.0"
authors = [{ name = "Talley Lambert", email = "talley.lambert@gmail.com" }]
dependencies = [
    "fastapi~=0.110.0",
    "pydantic-settings>=2.2.1",
    "pydantic[email]>=2.6.4",
    "sqlmodel~=0.0.16",
    "uvicorn[standard]>=0.28.0",
]
readme = "README.md"
requires-python = ">= 3.11"

[project.scripts]
fpb = "fpbase2._cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "datamodel-code-generator>=0.25.5",
    "httpx~=0.25.1",
    "ipython>=8.22.2",
    "mypy>=1.9.0",
    "pdbpp>=0.10.3",
    "polyfactory>=2.15.0",
    "pre-commit>=3.6.2",
    "psycopg[binary]>=3.1.18",
    "pytest-cov>=4.1.0",
    "pytest>=8.1.1",
    "python-dotenv>=1.0.1",
    "rich>=13.7.1",
    "ruff>=0.3.3",
    "typer>=0.9.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/fpbase2"]


[tool.ruff]
target-version = "py311"
src = ["fpbase2"]
fix = true

[tool.ruff.lint]
select = [
    "E",   # pyflakes
    "F",   # codestyle
    "W",   # codestyle
    "I",   # isort
    "UP",  # pyupgrade
    "S",   # bandit
    "B",   # bugbear
    "C4",  # flake8-comprehensions
    "ICN", # flake8-import-conventions
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-check
    "RUF", # ruff
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101", "S31"]

[tool.ruff.lint.isort]
known-first-party = ["fpbase2"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "fpbase2/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["uvicorn", "IPython"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# https://docs.pytest.org/en/latest/customize.html
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["src/fpbase2/tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
]

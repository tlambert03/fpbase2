[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fpbase2"
version = "0.1.0"
description = ""
authors = ["Talley Lambert <talley.lambert@gmail.com>"]

[tool.poetry.dependencies]
python = "~3.10"
fastapi = "~0.79"
requests = "^2.28.1"
sqlalchemy = "1.4.35"
sqlmodel = "^0.0.8"
strawberry-graphql = "^0.125.1"
uvicorn = { version = "^0.18.2", extras = ["standard"] }
python-dotenv = "^0.20.0"
pydantic = { extras = ["email"], version = "^1.9.2" }

[tool.poetry.dev-dependencies]
pytest = "^7.1"
pytest-cov = "^4.0.0"
mypy = "^0.971"
black = "^22.6.0"
pdbpp = "^0.10.3"
ipython = "^8.4.0"
pre-commit = "^2.20.0"
pydantic-factories = "^1.5.4"
psycopg2 = { extras = ["binary"], version = "^2.9.3" }
rich = "^12.5.1"
types-requests = "^2.28.9"
typer = "^0.6.1"
ruff = "^0.0.253"

[tool.poetry.scripts]
fpb = "fpbase2._cli:app"

[tool.ruff]
target-version = "py310"
src = ["fpbase2"]
select = [
    "E",   # pyflakes
    "F",   # codestyle
    "W",   # codestyle
    "I",   # isort
    "UP",  # pyupgrade
    "S",   # bandit
    "B",   # bugbear
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "TID", # flake8-tidy-imports
    "RUF", # ruff
]
ignore = [
    "B008", # do not perform function calls in argument defaults
]
fix = true

[tool.ruff.isort]
known-first-party = ["fpbase2"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "fpbase2/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = ["uvicorn", "IPython"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--cov=fpbase2", "--cov-report=term-missing"]
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
]
